apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: rootProject.file("gradle/global/flavors.gradle")

android {
    compileSdkVersion compile_sdk_version
    defaultConfig {
        applicationId "com.hjhjw1991.stark"
        applicationIdSuffix "demo"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // 对不起, 一个Demo都会超方法数我也是没想到
        multiDexEnabled true

        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'

    // demo 依赖
    // 网络请求
    implementation 'com.squareup.okhttp3:okhttp:4.3.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'

    // for stark whose code is partially generated by dagger and depends on it
    implementation "com.google.dagger:dagger:$dagger_version"
    // for scalpel plugin
    implementation "com.jakewharton.scalpel:scalpel:$scalpel_version"
    if (local_test) {
        implementation project(":stark-plugin-external")
    } else {
        implementation "com.bytedance.ies.stark:stark-plugin-external:${stark_base_version}"
    }

}
